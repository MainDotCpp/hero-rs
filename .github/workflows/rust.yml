name: Rust CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: 检查代码
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 安装最新的稳定版Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

  build:
    name: 构建和测试
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v3
      
      - name: 安装Rust工具链
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      
      - name: 构建项目
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

  release:
    name: 创建发布版本
    needs: [check, build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 安装Rust工具链
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: 构建发布版本
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: 创建发布包
        run: |
          mkdir -p release
          cp target/release/hero-rs release/
          cp README.md release/
          cd release && zip -r ../hero-rs-linux.zip .
      
      - name: 发布到GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: hero-rs-linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 交叉编译Windows版本
  windows-release:
    name: 创建Windows发布版本
    needs: [check, build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 安装Rust工具链
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-gnu
      
      - name: 安装交叉编译工具
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
      
      - name: 构建Windows版本
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-pc-windows-gnu
      
      - name: 创建Windows发布包
        run: |
          mkdir -p release
          cp target/x86_64-pc-windows-gnu/release/hero-rs.exe release/
          cp README.md release/
          cd release && zip -r ../hero-rs-windows.zip .
      
      - name: 发布到GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: hero-rs-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 交叉编译macOS版本（仅供测试，实际发布可能需要在macOS上构建）
  macos-release:
    name: 创建macOS发布版本
    needs: [check, build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 安装Rust工具链
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: 构建macOS版本
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: 创建macOS发布包
        run: |
          mkdir -p release
          cp target/release/hero-rs release/
          cp README.md release/
          cd release && zip -r ../hero-rs-macos.zip .
      
      - name: 发布到GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: hero-rs-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 